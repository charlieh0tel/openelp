project(openelp)
cmake_minimum_required(VERSION 2.7)

#
# Installation directories
#

if(NOT DEFINED SHARE_INSTALL_PREFIX)
  set(SHARE_INSTALL_PREFIX "share")
endif()

if(NOT DEFINED BIN_INSTALL_DIR)
  set(BIN_INSTALL_DIR "bin")
endif()

if(NOT DEFINED INCLUDE_INSTALL_DIR)
  set(INCLUDE_INSTALL_DIR "include")
endif()

if(NOT DEFINED LIB_INSTALL_DIR)
  set(LIB_INSTALL_DIR "lib${LIB_SUFFIX}")
endif()

if(NOT DEFINED SYSCONF_INSTALL_DIR)
  if(WIN32)
    set(SYSCONF_INSTALL_DIR "./")
  else()
    set(SYSCONF_INSTALL_DIR "/etc")
  endif()
endif()

if(NOT DEFINED MAN_INSTALL_DIR)
  set(MAN_INSTALL_DIR "${SHARE_INSTALL_PREFIX}/man")
endif()

#
# Configuration Variables
#

if(NOT DEFINED BUILD_SHARED_LIBS)
  set(BUILD_SHARED_LIBS "on")
endif()

if(NOT DEFINED OPENELP_USE_OPENSSL)
  set(OPENELP_USE_OPENSSL false)
endif()

if(NOT DEFINED OPENELP_USE_SYSLOG)
  if(WIN32)
    set(OPENELP_USE_SYSLOG false)
  else()
    set(OPENELP_USE_SYSLOG true)
  endif()
endif()

if(NOT DEFINED OPENELP_CONFIG_HINT)
  if(WIN32)
    set(OPENELP_CONFIG_HINT "..\\\\ELProxy.conf")
  else()
    set(OPENELP_CONFIG_HINT "/etc/ELProxy.conf")
  endif()
endif()

#
# Dependencies
#

if(OPENELP_USE_OPENSSL)
  find_package(OpenSSL REQUIRED)
endif()

#
# Variables
#

set(OPENELP_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
set(OPENELP_DOC_DIR "${OPENELP_DIR}/doc")
set(OPENELP_INCLUDE_DIR "${OPENELP_DIR}/include")
set(OPENELP_PACKAGE_DIR "${OPENELP_DIR}/package")
set(OPENELP_SOURCE_DIR "${OPENELP_DIR}/src")
set(OPENELP_TEST_DIR "${OPENELP_DIR}/test")

set(OPENELP_MAJOR_VERSION 0)
set(OPENELP_MINOR_VERSION 3)
set(OPENELP_PATCH_VERSION 0)
set(OPENELP_VERSION
  ${OPENELP_MAJOR_VERSION}.${OPENELP_MINOR_VERSION}.${OPENELP_PATCH_VERSION})

#
# Flags
#

set(CMAKE_C_FLAGS
  "${CMAKE_C_FLAGS} -DOPENELP_MAJOR_VERSION=${OPENELP_MAJOR_VERSION}")
set(CMAKE_C_FLAGS
  "${CMAKE_C_FLAGS} -DOPENELP_MINOR_VERSION=${OPENELP_MINOR_VERSION}")
set(CMAKE_C_FLAGS
  "${CMAKE_C_FLAGS} -DOPENELP_PATCH_VERSION=${OPENELP_PATCH_VERSION}")
set(CMAKE_C_FLAGS
  "${CMAKE_C_FLAGS} -DOPENELP_VERSION=${OPENELP_VERSION}")

if(OPENELP_CONFIG_HINT)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DOPENELP_CONFIG_HINT=\"${OPENELP_CONFIG_HINT}\"")
endif()

if(OPENELP_USE_SYSLOG)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DHAVE_SYSLOG=1")
endif()

if(OPENELP_USE_OPENSSL)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DHAVE_OPENSSL=1")
endif()

if(WIN32)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W3 /D_CRT_SECURE_NO_WARNINGS")
else()
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
endif()

#
# Includes
#

include_directories(${OPENELP_INCLUDE_DIR} ${OPENELP_SOURCE_DIR})

if(OPENELP_USE_OPENSSL)
  include_directories(${OPENSSL_INCLUDE_DIRS})
endif()

#
# Link Dirs
#

if(OPENELP_USE_OPENSSL)
  link_directories(${OPENSSL_LIB_DIRS})
endif()

#
# Subdirs
#

add_subdirectory(${OPENELP_DOC_DIR})
add_subdirectory(${OPENELP_INCLUDE_DIR})
add_subdirectory(${OPENELP_PACKAGE_DIR})
add_subdirectory(${OPENELP_SOURCE_DIR})
add_subdirectory(${OPENELP_TEST_DIR})
